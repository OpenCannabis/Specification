
/**
 * Specifies the generic concept of "content," which may be attached to nearly anything.
 */
syntax = "proto3";

package opencannabis.content;

option optimize_for = SPEED;
option objc_class_prefix = "OCS";
option java_package = "io.opencannabis.schema.content";
option java_multiple_files = false;
option java_outer_classname = "GenericContent";
option go_package = "github.com/OpenCannabis/protocol/opencannabis/content";

import "opencannabis/base/Language.proto";
import "opencannabis/base/Compression.proto";


// Enumerates supported encodings for content data.
enum Encoding {
  // UTF-8 standard encoding.
  UTF8 = 0;

  // Base-64 encoded UTF-8.
  B64 = 1;

  // Base-64 encoded ASCII.
  B64_ASCII = 2;
}


// Specifies a freeform content payload of some kind.
message Content {
  // Enumerates supported types/formats for content data.
  enum Type {
    // Plaintext format.
    TEXT = 0;

    // Markdown format.
    MARKDOWN = 1;

    // HTML format.
    HTML = 2;

    // Binary data of some kind (for instance, images).
    BINARY = 3;
  }

  // Format/underlying type of content data.
  Type type = 1;

  // Encoding of underlying content data.
  Encoding encoding = 2;

  // Language information for underlying content.
  opencannabis.base.Language language = 3;

  // Compression settings for underlying content.
  opencannabis.base.Compression compression = 4;

  // ID for the content attached herein, if applicable.
  string id = 5;

  // UUID for a specific content revision, if applicable.
  string revision = 6;

  // Payload for this content data. Can either be specified as a string, or a set of raw bytes.
  oneof payload {
    // Raw bytes of underlying content data.
    string content = 10;

    // Raw data attached to this content blob.
    bytes raw = 20;
  }
}
