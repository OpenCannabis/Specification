
/**
 * Specifies the generic concept of product content.
 */
syntax = "proto3";

package opencannabis.content;

option optimize_for = SPEED;
option objc_class_prefix = "OCS";
option java_package = "io.opencannabis.schema.content";
option java_multiple_files = false;
option java_outer_classname = "AttachedContent";

import "opencannabis/core/datamodel.proto";

import "opencannabis/content/Name.proto";
import "opencannabis/content/Content.proto";
import "opencannabis/content/Brand.proto";

import "opencannabis/temporal/Instant.proto";

import "opencannabis/media/MediaKey.proto";

import "opencannabis/structs/ProductFlags.proto";
import "opencannabis/labtesting/TestResults.proto";
import "opencannabis/structs/pricing/PricingDescriptor.proto";


// Specifies timestamps applied to a product, so that it may be tracked or sorted according to publish date, creation
// date, or last modification date.
message ProductTimestamps {
  // When the subject product was created.
  opencannabis.temporal.Instant created = 1;

  // When the subject product was last modified.
  opencannabis.temporal.Instant modified = 2;

  // When the subject product was last or first published.
  opencannabis.temporal.Instant published = 3;
}


// Specifies a common model for product content, mostly user-visible, and shared by all concrete models. Most of the
// information you see when a product is displayed or listed comes from this model.
message ProductContent {
  // Main product name.
  opencannabis.content.Name name = 1;

  // Brand information for this product.
  opencannabis.content.Brand brand = 2;

  // Description or narrative-style content about this product.
  opencannabis.content.Content summary = 3;

  // Content about how this product is best used, or recommended to be used, either from the manufacturer or retailer.
  opencannabis.content.Content usage = 4;

  // Dosage advice about this product, either from the manufacturer or retailer.
  opencannabis.content.Content dosage = 5;

  // Product media, including images, videos, and so on.
  repeated opencannabis.media.MediaReference media = 6 [
    (core.collection) = {
      mode: COLLECTION
      path: "media"
    }
  ];

  // Pricing specification for this product, regardless of pricing type (i.e. weighted or unit-style pricing).
  opencannabis.structs.pricing.ProductPricing pricing = 7;

  // Lab testing information concerning this product.
  opencannabis.labtesting.TestResults tests = 8;

  // Product flags attached to this content.
  repeated opencannabis.structs.ProductFlag flags = 9;

  // Timestamps for this product.
  ProductTimestamps ts = 10;
}
