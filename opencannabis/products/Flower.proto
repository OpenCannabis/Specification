
/**
 * Provides structures relating to flowers and enumerates various flower flags, and types.
 */
syntax = "proto3";

package opencannabis.products;

option optimize_for = SPEED;
option objc_class_prefix = "OCS";
option java_package = "io.opencannabis.schema.product";
option java_multiple_files = false;
option java_outer_classname = "FlowerProduct";
option go_package = "github.com/OpenCannabis/protocol/opencannabis/products";

import "opencannabis/core/datamodel.proto";


// Specifies the model for a traditional 'flower'-style product, which involves the sale or consumption of the flower
// or 'bud,' of a cannabis plant.
message Flower {
  // Specifies a main "flower type," which acts as a specialized sub-type to a flower record. Flower types roughly
  // denote different major categories of flower.
  enum Type {
    // The flower is trimmed bud, or standard cannabis flower.
    TRIMMED = 0;

    // The flower is "shake," or, by-product from trim processing.
    SHAKE = 1;

    // The flower from this entry is composed of small nugs.
    SMALLS = 2;

    // The flower from this entry is composed only of premium nugs.
    BIGS = 3;
  }

  // Specifies the specialized type of flower.
  Type type = 1 [
    (core.field).summary = "Specifies the specialized type of flower (TRIMMED, SHAKE, SMALL_NUGS, PREMIUM_NUGS)."
  ];
}
