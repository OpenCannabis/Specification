
/**
 * Specifies the structure of an inventory location, which is a warehouse, retailer, or production facility location, or
 * any other location that holds compliant product for later resale or use.
 */
syntax = "proto3";

package opencannabis.inventory;

option optimize_for = SPEED;
option objc_class_prefix = "OCS";
option java_package = "io.opencannabis.schema.inventory";
option java_multiple_files = true;
option go_package = "github.com/OpenCannabis/protocol/opencannabis/inventory";

import "opencannabis/core/datamodel.proto";
import "opencannabis/contact/ContactInfo.proto";
import "opencannabis/inventory/InventoryProduct.proto";


// Enumerates understood types of inventory locations.
enum InventoryLocationType {
  // Specifies a retail location.
  RETAIL = 0;

  // Specifies a warehouse/storage location.
  WAREHOUSE = 1;

  // Specifies a manufacturing or production facility.
  PRODUCTION = 2;
}


// Specifies a key that uniquely identifies an inventory location.
message InventoryLocationKey {
  // Unique ID provisioned to represent this inventory location.
  string uuid = 1 [
    (core.field).type = ID
  ];

  // Partner key, indicating which partner owns this inventory, or has custody of this inventory.
  string partner = 2;

  // Partner location key, which binds this inventory location to a partner organization.
  string location = 3;
}


// Specifies the notion of a concrete location that handles or stores inventory.
message InventoryLocation {
  // Key representing this inventory location.
  InventoryLocationKey key = 1 [
    (core.field).type = KEY
  ];

  // Specifies the type of this inventory location.
  InventoryLocationType type = 2;

  // Human-readable label for this location.
  string name = 3;

  // Physical and digital contact and location info.
  opencannabis.contact.ContactInfo contact = 4;
}


// Inventory binding. Binds an inventory item to an inventory location.
message InventoryBinding {
  // Inventory location.
  InventoryLocationKey held_by = 1;

  // Item held in inventory at the subject location.
  InventoryProduct item = 2;
}
